name: "OneConnect Docker Build and Push"
description: "Docker build and pushing OneConnect docker image to ECR Registry ..."
inputs:
  project-path:
    description: 'Project path to publish'
    required: true

  aws-region:
    description: 'AWS Resource Region'
    required: true

  aws-account-id:
    description: 'AWS account id'
    required: true

  ecr-repository:
    description: 'AWS Elastic Container Registry Repository'
    required: true

  image-title:
    description: 'Docker image title'
    required: true

  image-description:
    description: 'Docker image description'
    required: true


runs:
  using: "composite"
  steps:
  - name: Dotnet publish
    run: dotnet publish -c Release --no-restore -o ./app ./${{ project-path }}
    shell: bash

  - name: Configure AWS credentials
    uses: aws-actions/configure-aws-credentials@master
    with:
      aws-region: ${{ aws-region }}
      role-to-assume: arn:aws:iam::${{ inputs.aws-account-id }}:role/github
  - run: aws sts get-caller-identity
    shell: bash

  - name: Login to Amazon ECR
    id: login_ecr
    uses: aws-actions/amazon-ecr-login@v1

  - name: Docker metadata
    id: docker_metadata
    uses: docker/metadata-action@v3
    with:
      images: ${{ steps.login_ecr.outputs.registry }}/${{ inputs.ecr-repository }}
      tags: |
        type=ref,event=branch
        type=ref,event=pr
        type=semver,pattern={{version}}
        type=semver,pattern={{major}}.{{minor}}
        type=sha,format=long
      labels: |
        org.opencontainers.image.title=${{ inputs.image-title }}
        org.opencontainers.image.description=${{ inputs.image-description }}
        org.opencontainers.image.vendor=Awaze

  - name: Docker build and push image
    uses: docker/build-push-action@v2
    env:
      ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
    with:
      context: .
      tags: ${{ steps.docker_metadata.outputs.tags }}
      labels: ${{ steps.docker_metadata.outputs.labels }}
      push: true
      cache-from: |
        type=registry,ref=${{ env.ECR_REGISTRY }}/${{ inputs.ecr-repository }}:builder











